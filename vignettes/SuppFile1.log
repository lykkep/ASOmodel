This is pdfTeX, Version 3.1415926-2.4-1.40.13 (TeX Live 2012) (format=pdflatex 2012.6.30)  7 NOV 2014 10:26
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**SuppFile1.tex
(./SuppFile1.tex
LaTeX2e <2011/06/27>
Babel <v3.8m> and hyphenation patterns for english, dumylang, nohyphenation, ge
rman-x-2012-05-30, ngerman-x-2012-05-30, afrikaans, ancientgreek, ibycus, arabi
c, armenian, basque, bulgarian, catalan, pinyin, coptic, croatian, czech, danis
h, dutch, ukenglish, usenglishmax, esperanto, estonian, ethiopic, farsi, finnis
h, french, friulan, galician, german, ngerman, swissgerman, monogreek, greek, h
ungarian, icelandic, assamese, bengali, gujarati, hindi, kannada, malayalam, ma
rathi, oriya, panjabi, tamil, telugu, indonesian, interlingua, irish, italian, 
kurmanji, latin, latvian, lithuanian, mongolian, mongolianlmc, bokmal, nynorsk,
 polish, portuguese, romanian, romansh, russian, sanskrit, serbian, serbianc, s
lovak, slovenian, spanish, swedish, turkish, turkmen, ukrainian, uppersorbian, 
welsh, loaded.
(/usr/local/texlive/2012/texmf-dist/tex/latex/base/article.cls
Document Class: article 2007/10/19 v1.4h Standard LaTeX document class
(/usr/local/texlive/2012/texmf-dist/tex/latex/base/size11.clo
File: size11.clo 2007/10/19 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(./Temp_short.sty
(/usr/local/texlive/2012/texmf-dist/tex/latex/natbib/natbib.sty
Package: natbib 2010/09/13 8.31b (PWD, AO)
\bibhang=\skip43
\bibsep=\skip44
LaTeX Info: Redefining \cite on input line 694.
\c@NAT@ctr=\count87
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2000/07/18 v2.13 AMS math features
\@mathmargin=\skip45

For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2012/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01

(/usr/local/texlive/2012/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0
\@emptytoks=\toks14
\ex@=\dimen103
))
(/usr/local/texlive/2012/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d
\pmbraise@=\dimen104
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 1999/12/14 v2.01 operator names
)
\inf@bad=\count88
LaTeX Info: Redefining \frac on input line 211.
\uproot@=\count89
\leftroot@=\count90
LaTeX Info: Redefining \overline on input line 307.
\classnum@=\count91
\DOTSCASE@=\count92
LaTeX Info: Redefining \ldots on input line 379.
LaTeX Info: Redefining \dots on input line 382.
LaTeX Info: Redefining \cdots on input line 467.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen105
LaTeX Font Info:    Redeclaring font encoding OML on input line 567.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 568.
\macc@depth=\count93
\c@MaxMatrixCols=\count94
\dotsspace@=\muskip10
\c@parentequation=\count95
\dspbrk@lvl=\count96
\tag@help=\toks15
\row@=\count97
\column@=\count98
\maxfields@=\count99
\andhelp@=\toks16
\eqnshift@=\dimen106
\alignsep@=\dimen107
\tagshift@=\dimen108
\tagwidth@=\dimen109
\totwidth@=\dimen110
\lineht@=\dimen111
\@envbody=\toks17
\multlinegap=\skip46
\multlinetaggap=\skip47
\mathdisplay@stack=\toks18
LaTeX Info: Redefining \[ on input line 2666.
LaTeX Info: Redefining \] on input line 2667.
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 1999/02/16 v1.0f Enhanced LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2012/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 1999/03/16 v1.13 key=value parser (DPC)
\KV@toks@=\toks19
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2009/02/05 v1.0o Standard LaTeX Graphics (DPC,SPQR)

(/usr/local/texlive/2012/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 1999/03/16 v1.09 sin cos tan (DPC)
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: pdftex.def on input line 91.

(/usr/local/texlive/2012/texmf-dist/tex/latex/pdftex-def/pdftex.def
File: pdftex.def 2011/05/27 v0.06d Graphics/color for pdfTeX

(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/infwarerr.sty
Package: infwarerr 2010/04/08 v1.3 Providing info/warning/error messages (HO)
)
(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/ltxcmds.sty
Package: ltxcmds 2011/11/09 v1.22 LaTeX kernel commands for general use (HO)
)
\Gread@gobject=\count100
))
\Gin@req@height=\dimen112
\Gin@req@width=\dimen113
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/tools/tabularx.sty
Package: tabularx 1999/01/07 v2.07 `tabularx' package (DPC)

(/usr/local/texlive/2012/texmf-dist/tex/latex/tools/array.sty
Package: array 2008/09/09 v2.4c Tabular extension package (FMi)
\col@sep=\dimen114
\extrarowheight=\dimen115
\NC@list=\toks20
\extratabsurround=\skip48
\backup@length=\skip49
)
\TX@col@width=\dimen116
\TX@old@table=\dimen117
\TX@old@col=\dimen118
\TX@target=\dimen119
\TX@delta=\dimen120
\TX@cols=\count101
\TX@ftn=\toks21
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/fancyhdr/fancyhdr.sty
\fancy@headwidth=\skip50
\f@ncyO@elh=\skip51
\f@ncyO@erh=\skip52
\f@ncyO@olh=\skip53
\f@ncyO@orh=\skip54
\f@ncyO@elf=\skip55
\f@ncyO@erf=\skip56
\f@ncyO@olf=\skip57
\f@ncyO@orf=\skip58
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/setspace/setspace.sty
Package: setspace 2011/12/19 v6.7a set line spacing
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/url/url.sty
\Urlmuskip=\muskip11
Package: url 2006/04/12  ver 3.3  Verb mode for urls, etc.
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/tools/enumerate.sty
Package: enumerate 1999/03/05 v3.00 enumerate extensions (DPC)
\@enLab=\toks22
)
(/usr/local/texlive/2012/texmf-dist/tex/generic/babel/babel.sty
Package: babel 2008/07/08 v3.8m The Babel package

(/usr/local/texlive/2012/texmf-dist/tex/generic/babel/english.ldf
Language: english 2005/03/30 v3.3o English support from the babel system

(/usr/local/texlive/2012/texmf-dist/tex/generic/babel/babel.def
File: babel.def 2008/07/08 v3.8m Babel common definitions
\babel@savecnt=\count102
\U@D=\dimen121
)
\l@canadian = a dialect from \language\l@american 
\l@australian = a dialect from \language\l@british 
\l@newzealand = a dialect from \language\l@british 
))
(/usr/local/texlive/2012/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2008/03/30 v1.1d Input encoding file
\inpenc@prehook=\toks23
\inpenc@posthook=\toks24

(/usr/local/texlive/2012/texmf-dist/tex/latex/base/applemac.def
File: applemac.def 2008/03/30 v1.1d Input encoding file
))
(/usr/local/texlive/2012/texmf-dist/tex/latex/hyperref/hyperref.sty
Package: hyperref 2012/05/13 v6.82q Hypertext links for LaTeX

(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/hobsub-hyperref.sty
Package: hobsub-hyperref 2012/05/28 v1.13 Bundle oberdiek, subset hyperref (HO)


(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/hobsub-generic.sty
Package: hobsub-generic 2012/05/28 v1.13 Bundle oberdiek, subset generic (HO)
Package: hobsub 2012/05/28 v1.13 Construct package bundles (HO)
Package hobsub Info: Skipping package `infwarerr' (already loaded).
Package hobsub Info: Skipping package `ltxcmds' (already loaded).
Package: ifluatex 2010/03/01 v1.3 Provides the ifluatex switch (HO)
Package ifluatex Info: LuaTeX not detected.
Package: ifvtex 2010/03/01 v1.5 Detect VTeX and its facilities (HO)
Package ifvtex Info: VTeX not detected.
Package: intcalc 2007/09/27 v1.1 Expandable calculations with integers (HO)
Package: ifpdf 2011/01/30 v2.3 Provides the ifpdf switch (HO)
Package ifpdf Info: pdfTeX in PDF mode is detected.
Package: etexcmds 2011/02/16 v1.5 Avoid name clashes with e-TeX commands (HO)
Package etexcmds Info: Could not find \expanded.
(etexcmds)             That can mean that you are not using pdfTeX 1.50 or
(etexcmds)             that some package has redefined \expanded.
(etexcmds)             In the latter case, load this package earlier.
Package: kvsetkeys 2012/04/25 v1.16 Key value parser (HO)
Package: kvdefinekeys 2011/04/07 v1.3 Define keys (HO)
Package: pdftexcmds 2011/11/29 v0.20 Utility functions of pdfTeX for LuaTeX (HO
)
Package pdftexcmds Info: LuaTeX not detected.
Package pdftexcmds Info: \pdf@primitive is available.
Package pdftexcmds Info: \pdf@ifprimitive is available.
Package pdftexcmds Info: \pdfdraftmode found.
Package: pdfescape 2011/11/25 v1.13 Implements pdfTeX's escape features (HO)
Package: bigintcalc 2012/04/08 v1.3 Expandable calculations on big integers (HO
)
Package: bitset 2011/01/30 v1.1 Handle bit-vector datatype (HO)
Package: uniquecounter 2011/01/30 v1.2 Provide unlimited unique counter (HO)
)
Package hobsub Info: Skipping package `hobsub' (already loaded).
Package: letltxmacro 2010/09/02 v1.4 Let assignment for LaTeX macros (HO)
Package: hopatch 2012/05/28 v1.2 Wrapper for package hooks (HO)
Package: xcolor-patch 2011/01/30 xcolor patch
Package: atveryend 2011/06/30 v1.8 Hooks at the very end of document (HO)
Package atveryend Info: \enddocument detected (standard20110627).
Package: atbegshi 2011/10/05 v1.16 At begin shipout hook (HO)
Package: refcount 2011/10/16 v3.4 Data extraction from label references (HO)
Package: hycolor 2011/01/30 v1.7 Color options for hyperref/bookmark (HO)
)
(/usr/local/texlive/2012/texmf-dist/tex/generic/ifxetex/ifxetex.sty
Package: ifxetex 2010/09/12 v0.6 Provides ifxetex conditional
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/oberdiek/kvoptions.sty
Package: kvoptions 2011/06/30 v3.11 Key value format for package options (HO)
)
\@linkdim=\dimen122
\Hy@linkcounter=\count103
\Hy@pagecounter=\count104

(/usr/local/texlive/2012/texmf-dist/tex/latex/hyperref/pd1enc.def
File: pd1enc.def 2012/05/13 v6.82q Hyperref: PDFDocEncoding definition (HO)
)
\Hy@SavedSpaceFactor=\count105

(/usr/local/texlive/2012/texmf-dist/tex/latex/latexconfig/hyperref.cfg
File: hyperref.cfg 2002/06/06 v1.2 hyperref configuration of TeXLive
)
Package hyperref Info: Option `breaklinks' set `true' on input line 3941.
Package hyperref Info: Hyper figures OFF on input line 4062.
Package hyperref Info: Link nesting OFF on input line 4067.
Package hyperref Info: Hyper index ON on input line 4070.
Package hyperref Info: Plain pages OFF on input line 4077.
Package hyperref Info: Backreferencing OFF on input line 4082.
Package hyperref Info: Implicit mode ON; LaTeX internals redefined.
Package hyperref Info: Bookmarks ON on input line 4300.
\c@Hy@tempcnt=\count106
LaTeX Info: Redefining \url on input line 4653.
\Fld@menulength=\count107
\Field@Width=\dimen123
\Fld@charsize=\dimen124
Package hyperref Info: Hyper figures OFF on input line 5773.
Package hyperref Info: Link nesting OFF on input line 5778.
Package hyperref Info: Hyper index ON on input line 5781.
Package hyperref Info: backreferencing OFF on input line 5788.
Package hyperref Info: Link coloring OFF on input line 5793.
Package hyperref Info: Link coloring with OCG OFF on input line 5798.
Package hyperref Info: PDF/A mode OFF on input line 5803.
LaTeX Info: Redefining \ref on input line 5843.
LaTeX Info: Redefining \pageref on input line 5847.
\Hy@abspage=\count108
\c@Item=\count109
\c@Hfootnote=\count110
)

Package hyperref Message: Driver (autodetected): hpdftex.

(/usr/local/texlive/2012/texmf-dist/tex/latex/hyperref/hpdftex.def
File: hpdftex.def 2012/05/13 v6.82q Hyperref driver for pdfTeX
\Fld@listcount=\count111
\c@bookmark@seq@number=\count112

(/usr/local/texlive/2012/texmf-dist/tex/latex/oberdiek/rerunfilecheck.sty
Package: rerunfilecheck 2011/04/15 v1.7 Rerun checks for auxiliary files (HO)
Package uniquecounter Info: New unique counter `rerunfilecheck' on input line 2
82.
)
\Hy@SectionHShift=\skip59
))
(/usr/local/texlive/2012/texmf-dist/tex/latex/fixme/fixme.sty
Package: fixme 2009/09/30 v4.1 Insert fixme notes in your documents

(/usr/local/texlive/2012/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2001/05/26 v1.1c Standard LaTeX ifthen package (DPC)
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/tools/verbatim.sty
Package: verbatim 2003/08/22 v1.5q LaTeX2e package for verbatim enhancements
\every@verbatim=\toks25
\verbatim@line=\toks26
\verbatim@in@stream=\read1
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/xkeyval/xkeyval.sty
Package: xkeyval 2008/08/13 v2.6a package option processing (HA)

(/usr/local/texlive/2012/texmf-dist/tex/generic/xkeyval/xkeyval.tex
\XKV@toks=\toks27
\XKV@tempa@toks=\toks28
\XKV@depth=\count113
File: xkeyval.tex 2008/08/13 v2.6a key=value parser (HA)
))
\c@fixmecount=\count114
\c@fxnotecount=\count115
\c@fxwarningcount=\count116
\c@fxerrorcount=\count117
\c@fxfatalcount=\count118
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/footmisc/footmisc.sty
Package: footmisc 2011/06/06 v5.5b a miscellany of footnote facilities
\FN@temptoken=\toks29
\footnotemargin=\dimen125


LaTeX Warning: Command \@makecol  has changed.
               Check if current package is valid.

\c@pp@next@reset=\count119
Package footmisc Info: Declaring symbol style bringhurst on input line 855.
Package footmisc Info: Declaring symbol style chicago on input line 863.
Package footmisc Info: Declaring symbol style wiley on input line 872.
Package footmisc Info: Declaring symbol style lamport-robust on input line 883.

Package footmisc Info: Declaring symbol style lamport* on input line 903.
Package footmisc Info: Declaring symbol style lamport*-robust on input line 924
.
) (/usr/local/texlive/2012/texmf-dist/tex/latex/commath/commath.sty)
(/usr/local/texlive/2012/texmf-dist/tex/latex/caption/caption.sty
Package: caption 2012/02/19 v3.2f Customizing captions (AR)

(/usr/local/texlive/2012/texmf-dist/tex/latex/caption/caption3.sty
Package: caption3 2012/01/12 v1.4b caption3 kernel (AR)
\captionmargin=\dimen126
\captionmargin@=\dimen127
\captionwidth=\dimen128
\caption@indent=\dimen129
\caption@parindent=\dimen130
\caption@hangindent=\dimen131
)
\c@ContinuedFloat=\count120
Package caption Info: hyperref package is loaded.
)
(./Sweave.sty
Package: Sweave 

(/usr/local/texlive/2012/texmf-dist/tex/latex/fancyvrb/fancyvrb.sty
Package: fancyvrb 2008/02/07

Style option: `fancyvrb' v2.7a, with DG/SPQR fixes, and firstline=lastline fix 
<2008/02/07> (tvz)
\FV@CodeLineNo=\count121
\FV@InFile=\read2
\FV@TabBox=\box28
\c@FancyVerbLine=\count122
\FV@StepNumber=\count123
\FV@OutFile=\write3
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/upquote/upquote.sty
Package: upquote 2012/04/19 v1.3 upright-quote and grave-accent glyphs in verba
tim
)
(/usr/local/texlive/2012/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/local/texlive/2012/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
))
(/usr/local/texlive/2012/texmf-dist/tex/latex/ae/ae.sty
Package: ae 2001/02/12 1.3 Almost European Computer Modern

(/usr/local/texlive/2012/texmf-dist/tex/latex/base/fontenc.sty
Package: fontenc 2005/09/27 v1.99g Standard LaTeX package

(/usr/local/texlive/2012/texmf-dist/tex/latex/base/t1enc.def
File: t1enc.def 2005/09/27 v1.99g Standard LaTeX file
LaTeX Font Info:    Redeclaring font encoding T1 on input line 43.
)
LaTeX Font Info:    Try loading font information for T1+aer on input line 100.

(/usr/local/texlive/2012/texmf-dist/tex/latex/ae/t1aer.fd
File: t1aer.fd 1997/11/16 Font definitions for T1/aer.
)))) (./SuppFile1.aux)
\openout1 = `SuppFile1.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
LaTeX Font Info:    Checking defaults for PD1/pdf/m/n on input line 48.
LaTeX Font Info:    ... okay on input line 48.
(/usr/local/texlive/2012/texmf-dist/tex/context/base/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count124
\scratchdimen=\dimen132
\scratchbox=\box29
\nofMPsegments=\count125
\nofMParguments=\count126
\everyMPshowfont=\toks30
\MPscratchCnt=\count127
\MPscratchDim=\dimen133
\MPnumerator=\count128
\makeMPintoPDFobject=\count129
\everyMPtoPDFconversion=\toks31
) (/usr/local/texlive/2012/texmf-dist/tex/latex/oberdiek/epstopdf-base.sty
Package: epstopdf-base 2010/02/09 v2.5 Base part for package epstopdf

(/usr/local/texlive/2012/texmf-dist/tex/latex/oberdiek/grfext.sty
Package: grfext 2010/08/19 v1.1 Manage graphics extensions (HO)
)
Package grfext Info: Graphics extension search list:
(grfext)             [.png,.pdf,.jpg,.mps,.jpeg,.jbig2,.jb2,.PNG,.PDF,.JPG,.JPE
G,.JBIG2,.JB2,.eps]
(grfext)             \AppendGraphicsExtensions on input line 452.

(/usr/local/texlive/2012/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Liv
e
))
\AtBeginShipoutBox=\box30
Package hyperref Info: Link coloring OFF on input line 48.

(/usr/local/texlive/2012/texmf-dist/tex/latex/hyperref/nameref.sty
Package: nameref 2010/04/30 v2.40 Cross-referencing by name of section

(/usr/local/texlive/2012/texmf-dist/tex/generic/oberdiek/gettitlestring.sty
Package: gettitlestring 2010/12/03 v1.4 Cleanup title references (HO)
)
\c@section@level=\count130
)
LaTeX Info: Redefining \ref on input line 48.
LaTeX Info: Redefining \pageref on input line 48.
LaTeX Info: Redefining \nameref on input line 48.

(./SuppFile1.out) (./SuppFile1.out)
\@outlinefile=\write4
\openout4 = `SuppFile1.out'.

Package caption Info: Begin \AtBeginDocument code.
Package caption Info: End \AtBeginDocument code.
 (./SuppFile1-concordance.tex)
LaTeX Font Info:    Try loading font information for T1+aett on input line 58.

(/usr/local/texlive/2012/texmf-dist/tex/latex/ae/t1aett.fd
File: t1aett.fd 1997/11/16 Font definitions for T1/aett.
)
! Undefined control sequence.
<argument> > #install_github('
                              ASOmodel',username='lykkep')
l.60 ...stall_github('ASOmodel',username='lykkep')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > #install_github('ASOmodel'
                                       ,username='lykkep')
l.60 ...stall_github('ASOmodel',username='lykkep')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > #install_github('ASOmodel',username='
                                                  lykkep')
l.60 ...stall_github('ASOmodel',username='lykkep')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ..._github('ASOmodel',username='lykkep'
                                                  )
l.60 ...stall_github('ASOmodel',username='lykkep')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Underfull \hbox (badness 10000) in paragraph at lines 64--71

 []

(./SuppFile1.toc)
\tf@toc=\write5
\openout5 = `SuppFile1.toc'.

 [1

{/usr/local/texlive/2012/texmf-var/fonts/map/pdftex/updmap/pdftex.map}] <SuppFi
le1-S1.pdf, id=44, 505.89pt x 361.35pt>
File: SuppFile1-S1.pdf Graphic file (type pdf)

<use SuppFile1-S1.pdf>
Package pdftex.def Info: SuppFile1-S1.pdf used on input line 93.
(pdftex.def)             Requested size: 360.0pt x 257.14474pt.
 <SuppFile1-Efficacy.pdf, id=46, 505.89pt x 650.43pt>
File: SuppFile1-Efficacy.pdf Graphic file (type pdf)

<use SuppFile1-Efficacy.pdf>
Package pdftex.def Info: SuppFile1-Efficacy.pdf used on input line 103.
(pdftex.def)             Requested size: 360.0pt x 462.86055pt.
 [2 <./SuppFile1-S1.pdf>] [3 <./SuppFile1-Efficacy.pdf>]
! Undefined control sequence.
<argument> > names(x0) <- c('
                             Tt','OT','OTE','E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt'
                                ,'OT','OTE','E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','
                                  OT','OTE','E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT'
                                     ,'OTE','E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT','
                                       OTE','E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT','OTE'
                                           ,'E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT','OTE','
                                             E','O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT','OTE','E'
                                               ,'O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > names(x0) <- c('Tt','OT','OTE','E','
                                                 O','OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...mes(x0) <- c('Tt','OT','OTE','E','O'
                                                  ,'OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...s(x0) <- c('Tt','OT','OTE','E','O','
                                                  OCE','OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...) <- c('Tt','OT','OTE','E','O','OCE'
                                                  ,'OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...<- c('Tt','OT','OTE','E','O','OCE','
                                                  OC')
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...c('Tt','OT','OTE','E','O','OCE','OC'
                                                  )
l.124 ... <- c('Tt','OT','OTE','E','O','OCE','OC')
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 Tt',c('vprod','kOT*OT')] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt'
                    ,c('vprod','kOT*OT')] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('
                        vprod','kOT*OT')] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('vprod'
                              ,'kOT*OT')] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('vprod','
                                kOT*OT')] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('vprod','kOT*OT'
                                       )] <- 1
l.132 > nu['Tt',c('vprod','kOT*OT')] <- 1
                                         
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt'
                    ,c('kOpT*O*Tt','kdegrad*Tt')] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('
                        kOpT*O*Tt','kdegrad*Tt')] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('kOpT*O*Tt'
                                  ,'kdegrad*Tt')] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('kOpT*O*Tt','
                                    kdegrad*Tt')] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt'
                                               )] <- -1
l.133 > nu['Tt',c('kOpT*O*Tt','kdegrad*Tt')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT'
                    ,c('kOpT*O*Tt','kOTE*OTE')] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('
                        kOpT*O*Tt','kOTE*OTE')] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOpT*O*Tt'
                                  ,'kOTE*OTE')] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOpT*O*Tt','
                                    kOTE*OTE')] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOpT*O*Tt','kOTE*OTE'
                                             )] <- 1
l.135 > nu['OT',c('kOpT*O*Tt','kOTE*OTE')] <- 1
                                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OT',c('kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT'
                    ,c('kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('
                        kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOT*OT'
                               ,'kOTpE*OT*E','kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOT*OT','
                                 kOTpE*OT*E','kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOT*OT','kOTpE*OT*E'
                                            ,'kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OT',c('kOT*OT','kOTpE*OT*E','
                                              kdegrad*OT')] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...c('kOT*OT','kOTpE*OT*E','kdegrad*OT'
                                                  )] <- -1
l.136 ...kOT*OT','kOTpE*OT*E','kdegrad*OT')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OTE',c('kOTpE*OT*E')] <- 1
l.138 > nu['OTE',c('kOTpE*OT*E')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE'
                     ,c('kOTpE*OT*E')] <- 1
l.138 > nu['OTE',c('kOTpE*OT*E')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('
                         kOTpE*OT*E')] <- 1
l.138 > nu['OTE',c('kOTpE*OT*E')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('kOTpE*OT*E'
                                    )] <- 1
l.138 > nu['OTE',c('kOTpE*OT*E')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OTE',c('kOTE*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE'
                     ,c('kOTE*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('
                         kOTE*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('kOTE*OTE'
                                  ,'kdegrad*OTE','kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('kOTE*OTE','
                                    kdegrad*OTE','kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('kOTE*OTE','kdegrad*OTE'
                                                ,'kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OTE',c('kOTE*OTE','kdegrad*OTE','
                                                  kcleav*OTE')] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...kOTE*OTE','kdegrad*OTE','kcleav*OTE'
                                                  )] <- -1
l.139 ...E*OTE','kdegrad*OTE','kcleav*OTE')] <- -1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 E',c('kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E'
                   ,c('kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('
                       kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('kOTE*OTE'
                                ,'kdegrad*OTE','kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('kOTE*OTE','
                                  kdegrad*OTE','kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('kOTE*OTE','kdegrad*OTE'
                                              ,'kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('kOTE*OTE','kdegrad*OTE','
                                                kOTE*OCE')] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...('kOTE*OTE','kdegrad*OTE','kOTE*OCE'
                                                  )] <- 1
l.141 ...kOTE*OTE','kdegrad*OTE','kOTE*OCE')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 E',c('kOTpE*OT*E')] <- -1
l.142 > nu['E',c('kOTpE*OT*E')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E'
                   ,c('kOTpE*OT*E')] <- -1
l.142 > nu['E',c('kOTpE*OT*E')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('
                       kOTpE*OT*E')] <- -1
l.142 > nu['E',c('kOTpE*OT*E')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['E',c('kOTpE*OT*E'
                                  )] <- -1
l.142 > nu['E',c('kOTpE*OT*E')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 O',c('kOT*OT','kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O'
                   ,c('kOT*OT','kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('
                       kOT*OT','kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('kOT*OT'
                              ,'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('kOT*OT','
                                kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('kOT*OT','kdegrad*OTE'
                                            ,'kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('kOT*OT','kdegrad*OTE','
                                              kdegrad*OT','kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...('kOT*OT','kdegrad*OTE','kdegrad*OT'
                                                  ,'kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...kOT*OT','kdegrad*OTE','kdegrad*OT','
                                                  kC*OC')] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> ...','kdegrad*OTE','kdegrad*OT','kC*OC'
                                                  )] <- 1
l.144 ...'kdegrad*OTE','kdegrad*OT','kC*OC')] <- 1
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 O',c('kOpT*O*Tt')] <- -1
l.145 > nu['O',c('kOpT*O*Tt')] <- -1
                                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O'
                   ,c('kOpT*O*Tt')] <- -1
l.145 > nu['O',c('kOpT*O*Tt')] <- -1
                                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('
                       kOpT*O*Tt')] <- -1
l.145 > nu['O',c('kOpT*O*Tt')] <- -1
                                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['O',c('kOpT*O*Tt'
                                 )] <- -1
l.145 > nu['O',c('kOpT*O*Tt')] <- -1
                                    
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OCE',c('kcleav*OTE')] <- 1
l.147 > nu['OCE',c('kcleav*OTE')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE'
                     ,c('kcleav*OTE')] <- 1
l.147 > nu['OCE',c('kcleav*OTE')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE',c('
                         kcleav*OTE')] <- 1
l.147 > nu['OCE',c('kcleav*OTE')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE',c('kcleav*OTE'
                                    )] <- 1
l.147 > nu['OCE',c('kcleav*OTE')] <- 1
                                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OCE',c('kOTE*OCE')] <- -1
l.148 > nu['OCE',c('kOTE*OCE')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE'
                     ,c('kOTE*OCE')] <- -1
l.148 > nu['OCE',c('kOTE*OCE')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE',c('
                         kOTE*OCE')] <- -1
l.148 > nu['OCE',c('kOTE*OCE')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OCE',c('kOTE*OCE'
                                  )] <- -1
l.148 > nu['OCE',c('kOTE*OCE')] <- -1
                                     
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OC',c('kOTE*OCE')] <- 1
l.150 > nu['OC',c('kOTE*OCE')] <- 1
                                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC'
                    ,c('kOTE*OCE')] <- 1
l.150 > nu['OC',c('kOTE*OCE')] <- 1
                                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC',c('
                        kOTE*OCE')] <- 1
l.150 > nu['OC',c('kOTE*OCE')] <- 1
                                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC',c('kOTE*OCE'
                                 )] <- 1
l.150 > nu['OC',c('kOTE*OCE')] <- 1
                                   
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['
                 OC',c('kC*OC')] <- -1
l.151 > nu['OC',c('kC*OC')] <- -1
                                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC'
                    ,c('kC*OC')] <- -1
l.151 > nu['OC',c('kC*OC')] <- -1
                                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC',c('
                        kC*OC')] <- -1
l.151 > nu['OC',c('kC*OC')] <- -1
                                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> > nu['OC',c('kC*OC'
                              )] <- -1
l.151 > nu['OC',c('kC*OC')] <- -1
                                 
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

[4] <SuppFile1-Trel.pdf, id=80, 361.35pt x 289.08pt>
File: SuppFile1-Trel.pdf Graphic file (type pdf)
 <use SuppFile1-Trel.pdf>
Package pdftex.def Info: SuppFile1-Trel.pdf used on input line 169.
(pdftex.def)             Requested size: 216.0022pt x 172.8009pt.

<SuppFile1-EC50.pdf, id=84, 505.89pt x 289.08pt>
File: SuppFile1-EC50.pdf Graphic file (type pdf)
 <use SuppFile1-EC50.pdf>
Package pdftex.def Info: SuppFile1-EC50.pdf used on input line 196.
(pdftex.def)             Requested size: 360.0pt x 205.71579pt.


LaTeX Warning: `!h' float specifier changed to `!ht'.

[5 <./SuppFile1-Trel.pdf>] <SuppFile1-S31.pdf, id=96, 289.08pt x 216.81pt>
File: SuppFile1-S31.pdf Graphic file (type pdf)

<use SuppFile1-S31.pdf>
Package pdftex.def Info: SuppFile1-S31.pdf used on input line 225.
(pdftex.def)             Requested size: 216.0022pt x 162.00168pt.


LaTeX Warning: `!h' float specifier changed to `!ht'.

[6 <./SuppFile1-EC50.pdf>] (./SuppFile1.bbl)

FiXme Summary: Number of notes: 0,
(FiXme)        Number of warnings: 0,
(FiXme)        Number of errors: 0,
(FiXme)        Number of fatal errors: 0,
(FiXme)        Total: 0.

Package atveryend Info: Empty hook `BeforeClearDocument' on input line 255.
[7 <./SuppFile1-S31.pdf>]
Package atveryend Info: Empty hook `AfterLastShipout' on input line 255.
 (./SuppFile1.aux)
Package atveryend Info: Executing hook `AtVeryEndDocument' on input line 255.
Package atveryend Info: Executing hook `AtEndAfterFileList' on input line 255.
Package rerunfilecheck Info: File `SuppFile1.out' has not changed.
(rerunfilecheck)             Checksum: E5B9BE8D89A50716B70D2A663B4163DC;290.
Package atveryend Info: Empty hook `AtVeryVeryEnd' on input line 255.
 ) 
Here is how much of TeX's memory you used:
 9017 strings out of 493488
 132734 string characters out of 3141326
 231462 words of memory out of 3000000
 12131 multiletter control sequences out of 15000+200000
 27877 words of font info for 64 fonts, out of 3000000 for 9000
 957 hyphenation exceptions out of 8191
 53i,7n,92p,1064b,480s stack positions out of 5000i,500n,10000p,200000b,50000s
</usr/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx10.pfb
></usr/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx12.pfb>
</usr/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb><
/usr/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi8.pfb></u
sr/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb></usr
/local/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmr12.pfb></usr/l
ocal/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmr17.pfb></usr/loc
al/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmr8.pfb></usr/local/
texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmsltt10.pfb></usr/local
/texlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy8.pfb></usr/local/t
exlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmti10.pfb></usr/local/te
xlive/2012/texmf-dist/fonts/type1/public/amsfonts/cm/cmtt10.pfb>
Output written on SuppFile1.pdf (7 pages, 228359 bytes).
PDF statistics:
 171 PDF objects out of 1000 (max. 8388607)
 137 compressed objects within 2 object streams
 23 named destinations out of 1000 (max. 500000)
 70 words of extra memory for PDF output out of 10000 (max. 10000000)

